/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package guitrial;

import java.awt.event.KeyEvent;
import java.util.*;

/**
 *
 * @author user
 */
public class sjfGUI extends javax.swing.JDialog {

    /**
     * Creates new form sjfGUI
     */
    public sjfGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        preemptionGB = new javax.swing.ButtonGroup();
        preemtrad = new javax.swing.JRadioButton();
        nonpreemtiverad = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        btimetxt2 = new javax.swing.JTextPane();
        simbtn2 = new javax.swing.JButton();
        resetbtn2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        processNametxt2 = new javax.swing.JTextPane();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        arrivaltxt2 = new javax.swing.JTextPane();
        jLabel9 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        avtxt = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("SJF schedular");
        setBackground(new java.awt.Color(252, 233, 247));

        preemptionGB.add(preemtrad);
        preemtrad.setText("preemptive");

        preemptionGB.add(nonpreemtiverad);
        nonpreemtiverad.setText("non preemptive");

        jLabel2.setFont(new java.awt.Font("Californian FB", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(153, 0, 51));
        jLabel2.setText("Burst time");

        btimetxt2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                btimetxt2KeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(btimetxt2);

        simbtn2.setText("Simulate");
        simbtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simbtn2ActionPerformed(evt);
            }
        });

        resetbtn2.setText("Reset");
        resetbtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetbtn2ActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel3.setText("=1");

        jLabel4.setText("=4");

        jLabel5.setText("=2");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(0, 9, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel6.setText("eg.");

        jLabel7.setFont(new java.awt.Font("Californian FB", 0, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(153, 0, 51));
        jLabel7.setText("processes sequence");

        jScrollPane2.setViewportView(processNametxt2);

        jLabel8.setFont(new java.awt.Font("Californian FB", 0, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(153, 0, 51));
        jLabel8.setText("arrival time");

        arrivaltxt2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                arrivaltxt2KeyTyped(evt);
            }
        });
        jScrollPane3.setViewportView(arrivaltxt2);

        jLabel9.setText("eg.");

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel10.setText("=p1");

        jLabel11.setText("=p2");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(1, 1, 1)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel10)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jLabel13.setText("average time");

        avtxt.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel7))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addComponent(simbtn2)
                        .addGap(34, 34, 34)
                        .addComponent(resetbtn2)
                        .addGap(0, 131, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel13)
                        .addGap(18, 18, 18)
                        .addComponent(avtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(nonpreemtiverad)
                        .addGap(18, 18, 18)
                        .addComponent(preemtrad)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel8))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jScrollPane1))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane3)))
                        .addGap(90, 90, 90))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 142, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(130, 130, 130))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(21, 21, 21)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(nonpreemtiverad)
                                    .addComponent(preemtrad))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13)
                                    .addComponent(avtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(15, 15, 15)))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(simbtn2)
                    .addComponent(resetbtn2))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btimetxt2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btimetxt2KeyTyped
        // TODO add your handling code here:
        char c=evt.getKeyChar();
        if(!(Character.isDigit(c) || (c==KeyEvent.VK_EQUALS) || (c==KeyEvent.VK_ENTER) || (c==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE)))
            evt.consume();
    }//GEN-LAST:event_btimetxt2KeyTyped

    private void resetbtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetbtn2ActionPerformed
        // TODO add your handling code here:
        preemptionGB.clearSelection();
        btimetxt2.setText("");
        processNametxt2.setText("");
        arrivaltxt2.setText("");
                avtxt.setText("");

    }//GEN-LAST:event_resetbtn2ActionPerformed

    private void simbtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simbtn2ActionPerformed
       // String pn=PNtxt2.getText();
        String pns=processNametxt2.getText();//process name string
        pns=pns.replaceAll("[\n\r]", "");
        String ats=arrivaltxt2.getText();//processes arrival time strings
        ats=ats.replaceAll("[\n\r]", "");
        String bts=btimetxt2.getText();//processes burst time string
        bts=bts.replaceAll("[\n\r]", "");
        LinkedList pnl=new LinkedList();//process name list
        LinkedList btl=new LinkedList();//burst time list
        LinkedList atl=new LinkedList();//arrival time list
        
        FcfsGUI obj=new FcfsGUI();//creating object of class FcfsGUI to call funtions in its class
        
        obj.parseStringToStringList(pns,pnl);//parse process name string (pns)into substrings and put them in linked list(pnl)
        obj.parseStringToIntList(bts,btl);//parse burst time string(bts) into integers and put them in linked list (btl)
        obj.parseStringToIntList(ats,atl);//parse arrival time string(ats) into integer and put them in linked list(atl) 
        int [] stl=new int[pnl.size()];
                
        if(nonpreemtiverad.isSelected())
        {
            LinkedList currentp=new LinkedList();
            LinkedList currentb=new LinkedList();
            LinkedList finishedp=new LinkedList();
            
            SortAccordingToArrival(atl,btl,pnl);
            int start=(int)atl.get(0); int end=0;
            System.out.print(start);
            while(pnl.size()!=finishedp.size())
            {
                int t=start;
                for(int i=0;i<pnl.size();i++)//check for the current processes
                {
                    if((int)atl.get(i)<=t && !(finishedp.contains(pnl.get(i))))
                    {
                        currentp.add(pnl.get(i));
                        currentb.add(btl.get(i));
                    }
                }
                if(!currentp.isEmpty())
                {
                    SortAccordingToBurst(currentb,currentp);
                    end=start+(int)currentb.get(0);
                    System.out.print("|"+currentp.get(0));
                    for(int k=0;k<(int)currentb.get(0);k++)
                        System.out.print(" ");
                    System.out.print(end);
                    int index=pnl.indexOf(currentp.get(0));//get index of finished processs name from pnl 
                    stl[index]=start;
                    finishedp.add(pnl.get(index));
                    currentp.clear(); 
                    currentb.clear();
                    start=end;
                }
                else
                {
                    start++;
                    System.out.print("| "+start);    
                }
            }
            System.out.println();
            double avg=CalcAvgWait(atl,stl);
            String avgs=Double.toString(avg);
            avtxt.setText(avgs);
        }
        
        
    }//GEN-LAST:event_simbtn2ActionPerformed
    public void SortAccordingToArrival(LinkedList atl,LinkedList btl,LinkedList pnl)
    {
        boolean flag = true;   
        Object temp,temp2,temp3;  //holding variable
        while ( flag )
        {
           flag= false;    //set flag to false awaiting a possible swap
           for(int j=0; j<atl.size()-1; j++ )
           {
               if ( (int)atl.get(j) > (int)atl.get(j+1))   
               {   
                   //swap burst time
                   temp = btl.get(j);                
                   btl.set(j, btl.get(j+1));
                   btl.set(j+1, temp); 
                   //swap arrival time
                   temp2=atl.get(j);
                   atl.set(j, atl.get(j+1));
                   atl.set(j+1, temp2);
                   //swap process
                   temp3=pnl.get(j);
                   pnl.set(j, pnl.get(j+1));
                   pnl.set(j+1, temp3);
                   flag = true;  
               } 
            } 
        } 
    } 
    
    public void SortAccordingToBurst(LinkedList btl,LinkedList pnl)
    {
        boolean flag = true;   
        Object temp,temp3;  //holding variable
        while ( flag )
        {
           flag= false;    //set flag to false awaiting a possible swap
           for(int j=0; j<btl.size()-1; j++ )
           {
               if ( (int)btl.get(j) > (int)btl.get(j+1))   
               {   
                   //swap burst time
                   temp = btl.get(j);                
                   btl.set(j, btl.get(j+1));
                   btl.set(j+1, temp); 
                   //swap process
                   temp3=pnl.get(j);
                   pnl.set(j, pnl.get(j+1));
                   pnl.set(j+1, temp3);
                   flag = true;  
               } 
            } 
        } 
    } 
    
    
    private float CalcAvgWait(LinkedList al,int[] sl)
    {
        float sum=0.0f;
        for(int i=0;i<sl.length;i++)
            sum+=(sl[i]-(int)al.get(i)); // calculating sum of waiting time of all processes
        return sum/sl.length;
    }
    private void arrivaltxt2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_arrivaltxt2KeyTyped
        char c=evt.getKeyChar();
        if(!(Character.isDigit(c) || (c==KeyEvent.VK_EQUALS) || (c=='.') || (c==KeyEvent.VK_ENTER) || (c==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE)))
           evt.consume();
    }//GEN-LAST:event_arrivaltxt2KeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(sjfGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(sjfGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(sjfGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(sjfGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new sjfGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextPane arrivaltxt2;
    private javax.swing.JLabel avtxt;
    private javax.swing.JTextPane btimetxt2;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JRadioButton nonpreemtiverad;
    private javax.swing.ButtonGroup preemptionGB;
    private javax.swing.JRadioButton preemtrad;
    private javax.swing.JTextPane processNametxt2;
    private javax.swing.JButton resetbtn2;
    private javax.swing.JButton simbtn2;
    // End of variables declaration//GEN-END:variables
}
}